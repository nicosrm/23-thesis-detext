//
//  AboutView.swift
//  iOS
//
//  Created by Venkat on 20/9/20.
//

import SwiftUI

struct AboutView: View {
    
    @Environment(\.dismiss) var dismiss
        
    var body: some View {
        NavigationView {
            List {
                Section(header: Text(appVersion()).padding(.leading, 0)) {
                    Text("Made, with ❤️, by Venkat. Inspired by Detexify, I wanted to make a native iOS app for translating hand-drawn symbols to their corresponding LaTeX commands that was fast, efficient, and lightweight.")
                }
                
                //Feedback
                Section(header:Text("Feedback").padding(.leading, 0) ) {
                    Text("You can email me or contact me on Twitter for support, to report any bugs, or to suggest new features for the app.")
                    HStack {
                        Image(systemName: "envelope.fill")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.blue)
                            .accessibility(label: Text("Contact me on Twitter"))
                        Link("Send me an email", destination: URL(string: "mailto:venkat@venkatasg.net")!)
                            .foregroundColor(.primary)
                    }
                    HStack {
                        Image(systemName: "heart.circle.fill")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.pink)
                            .accessibility(label: Text("Please Rate & Review DeTeXt"))
                        Link("Please Rate & Review DeTeXt", destination: URL(string: "itms-apps://itunes.apple.com/app/id1531906207?action=write-review")!)
                            .foregroundColor(.primary)
                    }
                }
                
                // Info
                Section(header: Text("How it works").padding(.leading, 0)) {
                    Text("DeTeXt uses a MobileNet_v2 PyTorch model trained on the Detexify training data, which was then translated to CoreML using ") +
                        Text("coremltools").font(.system(.body, design: .monospaced)) +
                        Text(".\n\nThe symbol images are generated by converting PDF files containing each symbol (made with LaTeX) to SVG files. All symbols are typeset in their default font.\n\nThe source code for DeTeXt is available on GitHub under the MIT License.")
                    HStack {
                        Image(systemName: "cloud.fill")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.blue)
                        Link("DeTeXt repository", destination: URL(string: "https://github.com/venkatasg/DeTeXt")!)
                            .foregroundColor(.primary)
                    }
                    HStack {
                        Image(systemName: "wand.and.rays")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.red)
                        Link("Detexify website", destination: URL(string: "http://detexify.kirelabs.org")!)
                            .foregroundColor(.primary)
                    }
                    HStack {
                        Image(systemName: "doc.fill")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.gray)
                        Link("coremltools Documentation", destination: URL(string: "https://coremltools.readme.io")!)
                            .foregroundColor(.primary)
                    }
                    HStack {
                        Image(systemName: "function")
                            .font(.body)
                            .aspectRatio(contentMode: .fit)
                            .frame(width:20, alignment: .center)
                            .foregroundColor(.green)
                        Link("MobileNet_V2 PyTorch", destination: URL(string: "https://pytorch.org/hub/pytorch_vision_mobilenet_v2/")!)
                            .foregroundColor(.primary)
                    }
                }

                
                // Credits
                Section(header: Text("Credits").padding(.leading, 0)) {
                    Text("Thanks to Daniel Kirsch and the team at Detexify for their cool open-source web app that inspired me to make DeTeXt, and for providing the training data and prompt responses to my questions. \n\nThanks to Will Bishop for helping me figure out a tricky problem I had with the PencilKit APIs.\n\nA big thanks to Hans for beta testing new features and giving valuable feedback. \n\nFinally a big thanks to all the folks on the NetNewsWire Slack for being supportive and inspiring me to build my own iOS app.")
                    Link("Will Bishop", destination: URL(string: "https://willbish.com")!)
                    Link("Hans", destination: URL(string: "https://twitter.com/SherlockHans")!)
                    Link("NetNewsWire", destination: URL(string: "https://ranchero.com/netnewswire/")!)
                }
                
                //Privacy
                Section(header: Text("Privacy").padding(.leading, 0)) {
                        Text("DeTeXt does not collect or store any personal data or information. All processing of drawings to find the corresponding symbol happens on your device.")
                        Text("DeTeXt does not display any advertisements, use any trackers or analytics, or send any data to any server.").padding(.bottom, 5)
                }
            }
            .listStyle(InsetGroupedListStyle())
            
            .navigationTitle("About")
            .navigationBarItems(trailing: Button(action: {
                self.dismiss()
            }) {
                    #if targetEnvironment(macCatalyst)
                        Image(systemName: "xmark.circle")
                            .font(.title2)
                            .accessibility(label: Text("Close"))
                    #else
                        Image(systemName: "chevron.down")
                            .font(.title3)
                            .accessibility(label: Text("Close"))
                    #endif
                }
                .buttonStyle(.borderless)
            )
        }
        .navigationViewStyle(StackNavigationViewStyle())
    }
}


struct AboutView_Previews: PreviewProvider {

    static var previews: some View {
        AboutView()
    }
}
